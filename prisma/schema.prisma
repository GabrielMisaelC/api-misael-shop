// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}





model Service{
  id        Int      @default(autoincrement()) @id 
  name      String
  status    Boolean
  valor     Float
  ScheduleService      ScheduleService[]
}

model Profession{
  id        Int      @default(autoincrement()) @id 
  name      String
  status    Boolean
  user      User[]
}


model User {
  id            Int     @default(autoincrement()) @id 
  email         String  @unique
  name          String
  cpf           String?
  cellphone     String?
  birthday      String?
  password      String?
  profession    Profession?    @relation(fields: [professionId], references: [id])
  professionId  Int?
  schedule      Schedule[]
  completedService          CompletedService[]
}

model Client{
  id          Int     @default(autoincrement()) @id 
  email       String  @unique
  name        String
  cpf         String?
  cellphone   String?
  birthday    String?
  redeSocial  String
  schedule      Schedule[]
}

model Schedule{
  id            Int         @default(autoincrement()) @id 
  dateService   DateTime
  time          String
  observation   String     
  user          User?       @relation(fields: [userId], references: [id])
  userId        Int?
  client        Client?     @relation(fields: [clientId], references: [id])
  clientId      Int?
  ScheduleService           ScheduleService[]
  completedService          CompletedService[]
}

model ScheduleService{
  id            Int          @default(autoincrement()) @id 
  schedule      Schedule?    @relation(fields: [scheduleId], references: [id])
  scheduleId    Int?
  service       Service?     @relation(fields: [serviceId], references: [id])
  serviceId     Int?
}

model CompletedService{
  id              Int          @default(autoincrement()) @id 
  schedule        Schedule?    @relation(fields: [scheduleId], references: [id])
  scheduleId      Int?
  user            User?        @relation(fields: [userId], references: [id])
  userId          Int?
  date            DateTime     @updatedAt
  priceTotal      Float
  formOfPayment   String 
  observation     String
}